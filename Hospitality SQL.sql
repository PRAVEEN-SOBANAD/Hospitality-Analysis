


#Creating a new column Occupancy

Alter table fact_aggregated_bookings 
add column Occupancy float;

set SQL_SAFE_UPDATES = 0;

update fact_aggregated_bookings 
set Occupancy = (successful_bookings/capacity);

alter table fact_aggregated_bookings 
drop column Occupancy ;



#Creating a new Cancelled_flag

alter table fact_bookings
add column cancelled_flag int;

alter table fact_bookings
drop column cancelled_flag;

update fact_bookings
set cancelled_flag = CASE
	when booking_status = 'Cancelled' then  1
	else 0
end;



#changing Date column from text to Date in correct format
update dim_date
set `date` = str_to_date(`date`, '%d-%b-%y');

#modifying the data type from text to date
alter table dim_date
modify column `date` date;

#changing Data Type of Booking_Date from text to Date format
##already is in right formmat
#update fact_bookings
#set booking_date = str_to_date(booking_date,'%d-%b-%y');


# modifying text to date data type
alter table fact_bookings
modify column booking_date date;

#changing check_in_Date column from text to Date in correct format 
update fact_aggregated_bookings
set check_in_date = str_to_date(check_in_date,'%d-%b-%y');
# modifying text to date data type
alter table fact_aggregated_bookings
modify column check_in_date date;

#===============================
#Total Revenue Generated
select concat(  round((sum(revenue_generated)/1000000 ),0),' M' ) as `Total Revenue` from
fact_bookings;



#Occupancy %
select (concat( round(avg(Occupancy*100),2),' %')) `Occupancy %` from fact_aggregated_bookings;

#cancellation rate
select concat( round((sum(cancelled_flag)/count(booking_status)*100),2),' %')  as 'Cancellation_Rate' 
from fact_bookings ;

#Total Bookings
select count(booking_status) as 'Total Bookings' from fact_bookings;


#Utilized Capacity
select booking_status, count(booking_status) as 'Total Bookings' 
from fact_bookings
group by 1;

#Trend Analysis by revenue Genrated 
select d.`week no`, d.day_type, concat(  Round(  (sum(fb.revenue_generated) / 1000000) ,2) ,' M')  as 'Total Revenue Generated'
from dim_date d inner join fact_bookings fb 
on d.date = fb.booking_date
group by `week no`,d.day_type;

#WeekDay and Weekend revenue and Booking
select  d.day_type, concat(  Round(  (sum(fb.revenue_generated) / 1000000) ,2) ,' M')  as 'Revenue Generated' , count(fb.booking_status)  as 'Bookings'
from dim_date d inner join fact_bookings fb
on d.date = fb.booking_date
group by d.day_type;

#Revenue Generated by city and Hotels
select h.city, h.property_name, concat(  Round(  (sum(fb.revenue_generated) / 1000000) ,2) ,' M')  as 'Revenue Generated' 
from fact_bookings fb inner join dim_hotels h
on fb.property_id = h.property_id
group by h.city, h.property_name
order by city asc;

#class wise revenue
select r.room_class, concat(  Round(  (sum(fb.revenue_generated) / 1000000) ,2) ,' M')  as 'Revenue Generated'
from dim_rooms r inner join  fact_bookings fb
on r.room_id = fb.room_category
group by r.room_class
order by 2 asc;

#weekly trend - total booking and occupancy
select d.`week no`, count(fb.booking_status) as 'Total Booking', concat(round(sum(fab.occupancy)/1000,2),' K') as 'Total Occupancy'
from fact_aggregated_bookings fab inner join dim_date d 
on fab.check_in_date = d.date
inner join fact_bookings fb
on fb.booking_date = d.date
group by d.`week no` ;
 
 select * from fact_aggregated_bookings;
 
 